"""
Django settings for DjangoNote project.

Generated by 'django-admin startproject' using Django 4.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [] if DEBUG else ['*']  # 在關閉Debug模式來測試時，暫允許所有的連接來源。


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_cleanup.apps.CleanupConfig',  # 使用django-cleanup 來實現FileField和ImageField自動刪除
    'rest_framework',  # Django REST framework (尚未未實現)
    'reference.apps.ReferenceConfig',
    'school.apps.SchoolConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'school.middleware.school_middleware.SchoolMiddlewareForCheckLogin',
]

ROOT_URLCONF = 'DjangoNote.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',  # 為使在模板裡可使用{{ MEDIA_URL }}
            ],
        },
    },
]

WSGI_APPLICATION = 'DjangoNote.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'zh-Hant'  # 語系-字體，現在不支援用zh-TW(語系-國家)

# TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Taipei'

USE_I18N = True

USE_TZ = False  # 如果設置為True，在資料庫寫入時間時將以UTC儲存。如果考慮用戶來至多個時區，可考慮統一用UTC，再各別處理時區。


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'
if DEBUG:
    STATICFILES_DIRS = [BASE_DIR / 'static']
else:
    # 當使用非Debug模式時，需指定靜態文件之目錄的絕對路徑，因為此時Django內建的runserver伺服器不再幫助處理靜態文件的讀取。
    # 實際上線時，我們大多會把靜態資源讀取的工作交由其他伺服器來執行，主伺服器用來應付業務邏輯。
    # 這也是為何我們習慣在開發時將各app裡的static內，再創一個app名的資料夾。因為將來在收集資料時，可很方便的取得各app的所屬文件。
    # 更或者，我們可直接在STATICFILES_DIRS指定的資料夾內，針對每個app建立其專用的資料夾，將來不需再用collectstatic收集資料，直接
    # 使用該資料夾即可。
    STATIC_ROOT = BASE_DIR / 'static/'


# Managing files(media)
# https://docs.djangoproject.com/zh-hans/4.0/topics/files/
MEDIA_URL = 'media/'
MEDIA_ROOT = BASE_DIR / 'media/'  # 保存上傳文件之目錄的絕對路徑


# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# email設定
""" 
如果要成功執行，須至 https://accounts.google.com
安全性 -> 低安全性應用程式存取權 -> 允許低安全性應用程式 -> 開啟.
"""
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = 'smtp.gmail.com'
# EMAIL_PORT = 587
# EMAIL_HOST_USER = 'username'
# EMAIL_HOST_PASSWORD = 'password'
# EMAIL_USE_TLS = True


# 使用redis作為暫存
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/1",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            "CONNECTION_POOL_KWARGS": {"max_connections": 100, "retry_on_timeout": True},
        }
    }
}


# 可將自訂的settings參數另外保存，透過import來取代原settings.py裡的設定
try:
    from .local_settings import *
except ImportError:
    pass
